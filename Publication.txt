Experiment no.3

Program Code :-
#include<iostream>
#include<string.h>
using namespace std;
class publication
{
public:
char t[10];
float p;
public:
void getdata(void)   // To take input for publication details
{
cout<<"Enter title of publication";
cin>>t;
cout<<"Enter price of publication";
cin>>p;

}
void putdata(void)  // to displaying the publication details

{
cout<<"Publication title"<<t<<endl;
cout<<"Publication price"<<p<<endl;
}
};
class book :public publication  // derived class from publication class
{
public:
int pagecount;
public:
void getdata(void)
{
publication::getdata(); //call publication class function to get data
{
cout<<"Enter Book Page Count:";  //Acquire book datafrom user
cin>>pagecount;
}}
void putdata(void)
{
publication::putdata();   //show publication data
cout<<"book page count"<<pagecount<<endl;    //show book data
}  
};
class tape:public publication  // derived class from publication class
{
private:
float ptime;
public:
void getdata(void)
{
publication::getdata();  //call publication class function to get data
cout<<"Enter tapes playing time(in min)";
cin>>ptime;
}
void putdata(void)

{
publication::putdata();  //show publication data
cout<<"tapes playing time"<<ptime<<endl;
}
};
int main()
{
book b;
tape t;
b.getdata();
t.getdata();
b.putdata();
t.putdata();
return 0;
}


Output :-
Enter title of publication :Technical
Enter price of publication :500
Enter Book Page Count:200
Enter title of publication : cassete
Enter price of publication :400
Enter tapes playing time(in min) :20
Publication title :Technical
Publication price :500
book page count :200
Publication title :cassete
Publication price :400
tapes playing time :20


Algorithm:

1. Define a class named 'db' with private member variables for student details and public member functions.
Declare a static variable stdno to keep track of the number of objects created in the class.

Implement a default constructor 

Implement a copy constructor that takes a pointer to another object and initializes the current object with its data. Increment stdno.

Implement a member function getdata to take input for student details.

Implement a friend function display to display the details of an object.

Implement a destructor that displays a message when an object is destroyed.

Implement a static member function count to display the number of objects created.

In the main function:
a. Declare an object d1 .
b. Take user input for d1 using the getdata function and display it.
c. Create a second object d2 
d. Ask the user for the number of objects to create (n).
e. Display the details of each object using the display function.
f. Display the total number of objects created using the static member function count.
g. Use a loop to delete the dynamically allocated objects.
